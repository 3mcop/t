<?php

/**
 * @file
 * Show a modal overlay asking for postcode/login/signup
 */

function lt_overlay_theme() {
  return array(
    'lt_overlay' => array(
      'variables' => array(
        'close_button' => NULL,
        'postcode_form' => NULL,
        'login_form' => NULL,
      ),
      'template' => 'lt-overlay',
    ),
  );
}

function lt_overlay_menu() {
  return array(
    'guest' => array(
      'description' => 'Options for guests',
      'access callback' => 'user_is_anonymous',
      'title' => 'Guest options',
      'page callback' => '_lt_guest_options_page',
      'type' => MENU_NORMAL_ITEM,
    ),
    'guest/stop-overlay-inject' => array(
      'description' => 'Stop injecting the overlay',
      'access callback' => TRUE,
      'page callback' => '_lt_overlay_stop_inject',
      'type' => MENU_CALLBACK,
    ),
  );
}

function _lt_guest_options_page() {
  return drupal_get_form( 'lt_overlay_postcode_form' );
}

function _lt_overlay_stop_inject() {
  //dsm( 'Stop inject callback made from JS' );
  LtOverlayInjector::stopInject();
  exit( "{ 'status' : 'OK' }" );
}

function lt_overlay_block_info() {
  return array(
    'overlay' => array(
      'info' => 'Localitee overlay',
    ),
  );
}

class LtOverlayInjector {

  private static function getNumInjections() {
    $result = 0;
    if ( ! empty( $_SESSION['lt_overlay']['num_injections'] ) ) {
      $result = $_SESSION['lt_overlay']['num_injections'];
    }
    dsm( 'Num injections remaining = ' . $result );
    return $result;
  }

  private static function setNumInjections( $num ) {
      $_SESSION['lt_overlay']['num_injections'] = $num;
  }
  
  public static function isInject() {
    return self::getNumInjections() > 0;
    return TRUE;
  }

  public static function startInject() {
    self::setNumInjections( 2 );
  }

  public static function notifyInjectionMade() {
    self::setNumInjections( intval( self::getNumInjections() ) - 1 );
  }

  public static function stopInject(){
    self::setNumInjections( 0 );
  }
}

function lt_overlay_block_view( $delta ) {

  switch ( $delta ) {

  case 'overlay' :

    if ( ! postcode_exists() ) {
      postcode_set_guest_postcode( postcode_non_value() );
      LtOverlayInjector::startInject();
    }

    $content = '';

      drupal_add_js(
        'jQuery(document).ready(
          function() {
            jQuery("#frontModal a").click(
              function() {
                jQuery.post(
                  "http://loc.l/guest/stop-overlay-inject",
                  "Please work :<",
                  function (a,b,c) {
                    console.debug(a);
                    console.debug(b);
                    console.debug(c);
                    window.location.href = "http://loc.l/user/register";
                  }
                );
              }
            );
          }
        );',
        array('type' => 'inline', 'scope' => 'footer')
      );
      drupal_add_js(
        'jQuery(document).ready(
          function() {
            console.debug( jQuery("#frontModal a").data("events") );
          }
         );',
        array('type' => 'inline', 'scope' => 'footer')
      );
    if ( LtOverlayInjector::isInject() ) {
      $content = array(
        'content' => theme( 'lt_overlay', array(
          'close_button' => drupal_get_form( 'lt_overlay_close_button' ),
          'postcode_form' => drupal_get_form( 'lt_overlay_postcode_form' ),
          'login_form' => drupal_get_form( 'user_login' ),
        ) ),
      );
      
      LtOverlayInjector::notifyInjectionMade();

    }

    return $content;
  }
}

function lt_overlay_close_button() {

  return array(
    'close-button' => array(
      '#type' => 'submit',
      '#value' => 'x',
      '#attributes' => array(
        'class' => array( 'close' ),
        'data-dismiss' => 'modal',
      ),
    ),
  );
}

function lt_overlay_close_button_submit() {
  LtOverlayInjector::stopInject();
}

function lt_overlay_postcode_form( $form, &$form_state ) {
  dsm( 'form fn' );
  dsm( $form );

  return array(
    'postcode' => array(
      '#type' => 'textfield',
      '#title' => t('Enter your postcode'),
      '#attributes' => array( 'placeholder' => t('Enter postcode') ),
    ),
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Go'),
    ),
  );
}

function lt_overlay_postcode_form_validate( $form, &$form_state ) {
  dsm( 'validating' );
  if ( empty( $form_state['values']['postcode'] ) ) {
    form_set_error( 'postcode', t( 'You must enter a postcode.' ) );
    LtOverlayInjector::stopInject();
    drupal_goto( 'guest' );
  }
  else {
    $postcode = $form_state['values']['postcode'];
    if ( ! postcode_is_real_postcode( $postcode ) ) {
      form_set_error( 'postcode', t( 'The postcode you entered is not valid.' ) );
      LtOverlayInjector::stopInject();
      drupal_goto( 'guest' );
    }
  }
}


function lt_overlay_postcode_form_submit( $form, &$form_state ) {
  dsm( 'submitting' );
  postcode_set_guest_postcode( $form_state['values']['postcode'] );
  LtOverlayInjector::stopInject();
}

function lt_overlay_form_user_login_alter( &$form, &$form_state ) {
  $form['#validate'][] = 'lt_overlay_user_login_validate';
  $form['#submit'][] = 'lt_overlay_user_login_submit';
}

function lt_overlay_user_login_validate( $form, &$form_state ) {
  if ( empty( $form_state['uid'] ) ) {
    LtOverlayInjector::stopInject();
    drupal_goto( 'user' );
  }
}

function lt_overlay_user_login_submit( $form, &$form_state ) {
  LtOverlayInjector::stopInject();
}
